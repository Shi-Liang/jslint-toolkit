[[1,38,31,"Expected '{' and instead saw 'object'.","if (legacy && initialize) object.prototype = legacy.prototype;"],[1,48,56,"Expected '{' and instead saw 'obj'.","if (!protect || force || !obj.prototype[name]) obj.prototype[name] = method;"],[1,49,23,"Expected '{' and instead saw 'Native'.","if (generics) Native.genericize(obj, name, protect);"],[1,57,29,"Expected '{' and instead saw 'return'.","if ((a1 = pa1)) return add(this, a2, a1, a3);"],[1,59,27,"Expected '{' and instead saw 'this'.","for (var a in a1) this.alias(a, a1[a], a2);"],[1,64,36,"Expected '{' and instead saw 'return'.","if (typeof a1 == 'string') return add(this, a1, a2, a3);"],[1,65,27,"Expected '{' and instead saw 'add'.","for (var p in a1) add(this, p, a1[p], a2);"],[1,69,18,"Expected '{' and instead saw 'object'.","if (methods) object.implement(methods);"],[1,75,91,"Expected '{' and instead saw 'object'.","if ((!check || !object[property]) && typeof object.prototype[property] == 'function') object[property] = function(){"],[1,82,53,"Expected '{' and instead saw 'objects'.","for (var i = 0, l = objects.length; i < l; i++) objects[i].implement(properties);"],[1,86,23,"Expected '{' and instead saw 'object'.","if (!object.type) object.type = function(item){"],[1,93,28,"Expected '{' and instead saw 'new'.","for (var n in natives) new Native({name: n, initialize: natives[n], protect: true});"],[3,93,32,"'new' should not be used as a statement.","for (var n in natives) new Native({name: n, initialize: natives[n], protect: true});"],[1,93,31,"Missing semicolon.","for (var n in natives) new Native({name: n, initialize: natives[n], protect: true});"],[1,96,26,"Expected '{' and instead saw 'Native'.","for (var t in types) Native.typize(types[t], t);"],[1,103,48,"Expected '{' and instead saw 'Native'.","for (var i = generics[g].length; i--;) Native.genericize(natives[g], generics[g][i], true);"],[1,112,38,"Expected '{' and instead saw 'object'.","if ($type(object) == 'hash') object = $unlink(object.getClean());"],[1,113,33,"Expected '{' and instead saw 'this'.","for (var key in object) this[key] = object[key];"],[1,123,43,"Expected '{' and instead saw 'fn'.","if (this.hasOwnProperty(key)) fn.call(bind, this[key], key, this);"],[1,130,43,"Expected '{' and instead saw 'clean'.","if (this.hasOwnProperty(key)) clean[key] = this[key];"],[1,138,43,"Expected '{' and instead saw 'length'.","if (this.hasOwnProperty(key)) length++;"],[1,150,54,"Expected '{' and instead saw 'fn'.","for (var i = 0, l = this.length; i < l; i++) fn.call(bind, this[i], i, this);"],[3,159,46,"Use the array literal notation [].","var l = iterable.length, array = new Array(l);"],[1,160,21,"Expected '{' and instead saw 'array'.","while (l--) array[l] = iterable[l];"],[1,164,2,"Unnecessary semicolon.","};"],[1,170,2,"Unnecessary semicolon.","};"],[1,174,2,"Unnecessary semicolon.","};"],[1,180,2,"Unnecessary semicolon.","};"],[3,183,17,"Use '!==' to compare with 'undefined'.","return (obj != undefined);"],[1,184,2,"Unnecessary semicolon.","};"],[1,189,2,"Unnecessary semicolon.","};"],[1,191,20,"Unnecessary semicolon.","function $empty(){};"],[1,194,39,"Expected '{' and instead saw 'original'.","for (var key in (extended || {})) original[key] = extended[key];"],[1,196,2,"Unnecessary semicolon.","};"],[1,200,2,"Unnecessary semicolon.","};"],[1,206,2,"Unnecessary semicolon.","};"],[1,212,2,"Unnecessary semicolon.","};"],[1,214,16,"'$mixin' was used before it was defined.","function $mixin(mix){"],[1,217,40,"Expected '{' and instead saw 'continue'.","if ($type(object) != 'object') continue;"],[1,224,2,"Unnecessary semicolon.","};"],[3,228,26,"Use '!==' to compare with 'undefined'.","if (arguments[i] != undefined) return arguments[i];"],[1,228,40,"Expected '{' and instead saw 'return'.","if (arguments[i] != undefined) return arguments[i];"],[1,231,2,"Unnecessary semicolon.","};"],[1,235,2,"Unnecessary semicolon.","};"],[1,240,2,"Unnecessary semicolon.","};"],[3,243,21,"Missing '()' invoking a constructor.","return +new Date;"],[1,253,2,"Unnecessary semicolon.","};"],[1,255,15,"'$type' was used before it was defined.","function $type(obj){"],[3,256,13,"Use '===' to compare with 'undefined'.","if (obj == undefined) return false;"],[1,256,27,"Expected '{' and instead saw 'return'.","if (obj == undefined) return false;"],[3,256,27,"Too many errors. (6% scanned).",""]]